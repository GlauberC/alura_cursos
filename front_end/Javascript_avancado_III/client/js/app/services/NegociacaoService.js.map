{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n    \n    constructor() {\n        \n        this._http = new HttpService();\n    }\n    \n    obterNegociacoesDaSemana() {\n               \n        return this._http\n            .get('negociacoes/semana')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana');\n            });  \n    }\n    \n    obterNegociacoesDaSemanaAnterior() {\n               \n        return this._http\n            .get('negociacoes/anterior')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana anterior');\n            });   \n    }\n    \n    obterNegociacoesDaSemanaRetrasada() {\n               \n        return this._http\n            .get('negociacoes/retrasada')\n            .then(negociacoes => {\n                console.log(negociacoes);\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            })\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\n            });  \n        \n    }\n    \n    obterNegociacoes() {\n        \n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), [])\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\n\n            return negociacoes;\n        }).catch(erro => {\n            throw new Error(erro);\n        });\n\t} \n\n    cadastra(negociacao) {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível adicionar a negociação')\n            });\n    }\n\n    lista() {\n\n        return ConnectionFactory\n                .getConnection()\n                .then(connection => new NegociacaoDao(connection))\n                .then(dao => dao.listaTodos())\n                .catch(erro => {\n                    console.log(erro);\n                    throw new Error('Não foi possível obter as negociações')\n                })\n    }\n\n    apaga() {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível apagar as negociações')\n            })\n\n    }\n\n    importa(listaAtual) {\n\n        return this.obterNegociacoes()\n            .then(negociacoes => \n                negociacoes.filter(negociacao => \n                    !listaAtual.some(negociacaoExistente => \n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n            )\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível buscar negociações para importar');\n            })\n    }\n}"]}